/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Fri Dec 28 18:10:38 2018. */

#ifndef PB_IOT_COMM_PB_H_INCLUDED
#define PB_IOT_COMM_PB_H_INCLUDED

#ifndef PB_FIELD_16BIT
#define PB_FIELD_16BIT
#endif

#undef PB_FIELD_32BIT

#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CmdRecord {
    pb_callback_t device_id;
    pb_callback_t sub_device_id;
    int32_t cmdid;
    pb_callback_t arg_int32;
    pb_callback_t arg_string;
    pb_callback_t arg_bytes;
    int32_t cmd_src;
    int32_t is_run;
    int64_t create_time;
    int64_t run_time;
    uint32_t user_id;
/* @@protoc_insertion_point(struct:CmdRecord) */
} CmdRecord;

typedef struct _ExprInfo {
    int32_t expr_id;
    int32_t class_;
    int32_t start_time;
    int32_t end_time;
    pb_callback_t device_id;
    pb_callback_t sub_device_id;
    int32_t item_type;
    int32_t item_index;
    pb_callback_t expr;
    int32_t value;
    pb_callback_t week_days;
/* @@protoc_insertion_point(struct:ExprInfo) */
} ExprInfo;

typedef struct _RuleInfo {
    pb_callback_t et_id;
    pb_callback_t device_id;
    pb_callback_t et_name;
    int32_t prio;
    int32_t enable;
    int32_t only_time;
    pb_callback_t lhs;
    pb_callback_t exprs;
    pb_callback_t rhs;
    int32_t is_end;
    int32_t et_type;
    pb_callback_t house_guid;
    uint32_t user_id;
/* @@protoc_insertion_point(struct:RuleInfo) */
} RuleInfo;

typedef PB_BYTES_ARRAY_T(256) YCMD_arg_bytes_t;
typedef struct _YCMD {
    int32_t cmdid;
    pb_size_t arg_int32_count;
    int32_t arg_int32[10];
    pb_size_t arg_string_count;
    char arg_string[2][2048];
    YCMD_arg_bytes_t arg_bytes;
/* @@protoc_insertion_point(struct:YCMD) */
} YCMD;

typedef struct _SIOTCMD {
    int32_t cmd_type;
    char device_id[64];
    char sub_device_id[64];
    pb_size_t cmds_count;
    YCMD cmds[1];
/* @@protoc_insertion_point(struct:SIOTCMD) */
} SIOTCMD;

typedef struct _IOTCMD {
    pb_size_t cmd_count;
    SIOTCMD cmd[1];
/* @@protoc_insertion_point(struct:IOTCMD) */
} IOTCMD;

typedef struct _RhsInfo {
    int32_t action_type;
    pb_callback_t scene_id;
    int32_t delay_sec;
    SIOTCMD cmd;
/* @@protoc_insertion_point(struct:RhsInfo) */
} RhsInfo;

typedef struct _SceneInfo {
    pb_callback_t scene_id;
    int32_t scene_type;
    int32_t enable;
    pb_callback_t house_guid;
    pb_callback_t res_id;
    pb_callback_t scene_name;
    IOTCMD cmd;
/* @@protoc_insertion_point(struct:SceneInfo) */
} SceneInfo;

/* Default values for struct fields */

/* Initializer values for message structs */
#define YCMD_init_default                        {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {"", ""}, {0, {0}}}
#define SIOTCMD_init_default                     {0, "", "", 0, {YCMD_init_default}}
#define IOTCMD_init_default                      {0, {SIOTCMD_init_default}}
#define CmdRecord_init_default                   {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0, 0}
#define ExprInfo_init_default                    {0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define RhsInfo_init_default                     {0, {{NULL}, NULL}, 0, SIOTCMD_init_default}
#define RuleInfo_init_default                    {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0}
#define SceneInfo_init_default                   {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, IOTCMD_init_default}
#define YCMD_init_zero                           {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {"", ""}, {0, {0}}}
#define SIOTCMD_init_zero                        {0, "", "", 0, {YCMD_init_zero}}
#define IOTCMD_init_zero                         {0, {SIOTCMD_init_zero}}
#define CmdRecord_init_zero                      {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0, 0}
#define ExprInfo_init_zero                       {0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define RhsInfo_init_zero                        {0, {{NULL}, NULL}, 0, SIOTCMD_init_zero}
#define RuleInfo_init_zero                       {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0}
#define SceneInfo_init_zero                      {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, IOTCMD_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define CmdRecord_device_id_tag                  1
#define CmdRecord_sub_device_id_tag              2
#define CmdRecord_cmdid_tag                      3
#define CmdRecord_arg_int32_tag                  4
#define CmdRecord_arg_string_tag                 5
#define CmdRecord_arg_bytes_tag                  6
#define CmdRecord_cmd_src_tag                    7
#define CmdRecord_is_run_tag                     8
#define CmdRecord_create_time_tag                9
#define CmdRecord_run_time_tag                   10
#define CmdRecord_user_id_tag                    11
#define ExprInfo_expr_id_tag                     1
#define ExprInfo_class__tag                      2
#define ExprInfo_week_days_tag                   15
#define ExprInfo_start_time_tag                  3
#define ExprInfo_end_time_tag                    4
#define ExprInfo_device_id_tag                   5
#define ExprInfo_sub_device_id_tag               6
#define ExprInfo_item_type_tag                   7
#define ExprInfo_item_index_tag                  8
#define ExprInfo_expr_tag                        9
#define ExprInfo_value_tag                       10
#define RuleInfo_et_id_tag                       1
#define RuleInfo_device_id_tag                   2
#define RuleInfo_et_name_tag                     3
#define RuleInfo_prio_tag                        4
#define RuleInfo_enable_tag                      5
#define RuleInfo_only_time_tag                   6
#define RuleInfo_lhs_tag                         7
#define RuleInfo_exprs_tag                       8
#define RuleInfo_rhs_tag                         9
#define RuleInfo_is_end_tag                      10
#define RuleInfo_et_type_tag                     11
#define RuleInfo_house_guid_tag                  12
#define RuleInfo_user_id_tag                     13
#define YCMD_cmdid_tag                           11
#define YCMD_arg_int32_tag                       12
#define YCMD_arg_string_tag                      13
#define YCMD_arg_bytes_tag                       14
#define SIOTCMD_cmd_type_tag                     1
#define SIOTCMD_device_id_tag                    5
#define SIOTCMD_sub_device_id_tag                6
#define SIOTCMD_cmds_tag                         7
#define IOTCMD_cmd_tag                           1
#define RhsInfo_action_type_tag                  1
#define RhsInfo_scene_id_tag                     11
#define RhsInfo_delay_sec_tag                    12
#define RhsInfo_cmd_tag                          13
#define SceneInfo_scene_id_tag                   1
#define SceneInfo_scene_type_tag                 3
#define SceneInfo_enable_tag                     4
#define SceneInfo_house_guid_tag                 5
#define SceneInfo_scene_name_tag                 11
#define SceneInfo_cmd_tag                        12
#define SceneInfo_res_id_tag                     10

/* Struct field encoding specification for nanopb */
extern const pb_field_t YCMD_fields[5];
extern const pb_field_t SIOTCMD_fields[5];
extern const pb_field_t IOTCMD_fields[2];
extern const pb_field_t CmdRecord_fields[12];
extern const pb_field_t ExprInfo_fields[12];
extern const pb_field_t RhsInfo_fields[5];
extern const pb_field_t RuleInfo_fields[14];
extern const pb_field_t SceneInfo_fields[8];

/* Maximum encoded size of messages (where known) */
#define YCMD_size                                4482
#define SIOTCMD_size                             4628
#define IOTCMD_size                              4631
/* CmdRecord_size depends on runtime parameters */
/* ExprInfo_size depends on runtime parameters */
/* RhsInfo_size depends on runtime parameters */
/* RuleInfo_size depends on runtime parameters */
/* SceneInfo_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define IOT_COMM_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
